service: back-end
frameworkVersion: '2'

provider:
  name: aws
  runtime: dotnetcore3.1
  profile: serverless
  lambdaHashingVersion: 20201221
  region: eu-west-2
  environment: 
    DB_HOST: ${file(./config.dev.json):DB_HOST}
    DB_USER: ${file(./config.dev.json):DB_USER}
    DB_NAME: ${file(./config.dev.json):DB_NAME}
    DB_PASSWORD: ${file(./config.dev.json):DB_PASSWORD}
  httpApi:
    cors: true

package:
  individually: true

functions:
  get-allOpportunities:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::GetAllOpportunities
    package:
      artifact: bin/Release/netcoreapp3.1/MAD_days.zip
    events:
      - httpApi:
          path: /opportunities
          method: get
  get-allCharities:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::GetAllCharities
    package:
      artifact: bin/Release/netcoreapp3.1/MAD_days.zip
    events:
      - httpApi:
          path: /charities
          method: get
  save-opportunity:
    handler: CsharpHandlers::AwsDotnetCsharp.Handler::PostOpportunity
    package:
      artifact: bin/Release/netcoreapp3.1/MAD_days.zip
    events:
      - httpApi:
          path: /charities/{charityId}/opportunities
          method: post
  
          