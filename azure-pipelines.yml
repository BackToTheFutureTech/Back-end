# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'
    
stages:
- stage: Build
  jobs:
  - job:
    variables: 
    - group: madday-backend-variables
    steps:
    - task: UseDotNet@2
      inputs:
        version: '3.1.200'
    - task: DotNetCoreCLI@2
      displayName: Install Lambda
      inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'install --global Amazon.Lambda.Tools --framework netcoreapp3.1'
    - task: DotNetCoreCLI@2
      displayName: Package Function
      inputs:
        command: 'custom'
        custom: 'lambda'
        arguments: 'package --configuration Release --framework netcoreapp3.1 --output-package $(Build.ArtifactStagingDirectory)/MAD_days.zip'


    - task: PublishBuildArtifacts@1
      displayName: Publish Artifacts
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'MAD_days.zip'
        publishLocation: 'Container'

- stage: Deploy
  jobs: 
    - job:

      variables:
      - group: AWS

      steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'MAD_days.zip'
          downloadPath: '$(System.ArtifactsDirectory)'
      - task: LambdaDeployFunction@1
        displayName: 'Update Signup Volunteer'
        inputs:
          awsCredentials: 'AWS Root'
          regionName: 'eu-west-2'
          deploymentMode: 'codeonly'
          functionName: 'back-end-dev-signup-volunteer'
          codeLocation: 'localfile'
          localZipFile: '$(Build.ArtifactStagingDirectory)/MAD_days.zip/MAD_days.zip'
      - task: LambdaDeployFunction@1
        displayName: 'Update Save an Opportunity'
        inputs:
          awsCredentials: 'AWS Root'
          regionName: 'eu-west-2'
          deploymentMode: 'codeonly'
          functionName: 'back-end-dev-save-opportunity'
          codeLocation: 'localfile'
          localZipFile: '$(Build.ArtifactStagingDirectory)/MAD_days.zip/MAD_days.zip'
      - task: LambdaDeployFunction@1
        displayName: 'Update Delete an Opportunity'
        inputs:
          awsCredentials: 'AWS Root'
          regionName: 'eu-west-2'
          deploymentMode: 'codeonly'
          functionName: 'back-end-dev-delete-opportunity'
          codeLocation: 'localfile'
          localZipFile: '$(Build.ArtifactStagingDirectory)/MAD_days.zip/MAD_days.zip'
      - task: LambdaDeployFunction@1
        displayName: 'Update Get All Opportunities'
        inputs:
          awsCredentials: 'AWS Root'
          regionName: 'eu-west-2'
          deploymentMode: 'codeonly'
          functionName: 'back-end-dev-get-allOpportunities'
          codeLocation: 'localfile'
          localZipFile: '$(Build.ArtifactStagingDirectory)/MAD_days.zip/MAD_days.zip'
      - task: LambdaDeployFunction@1
        displayName: 'Update Edit an Opportunity'
        inputs:
          awsCredentials: 'AWS Root'
          regionName: 'eu-west-2'
          deploymentMode: 'codeonly'
          functionName: 'back-end-dev-edit-opportunity'
          codeLocation: 'localfile'
          localZipFile: '$(Build.ArtifactStagingDirectory)/MAD_days.zip/MAD_days.zip'
      - task: LambdaDeployFunction@1
        displayName: 'Update Get All Charities'
        inputs:
          awsCredentials: 'AWS Root'
          regionName: 'eu-west-2'
          deploymentMode: 'codeonly'
          functionName: 'back-end-dev-get-allCharities'
          codeLocation: 'localfile'
          localZipFile: '$(Build.ArtifactStagingDirectory)/MAD_days.zip/MAD_days.zip'
      
      - task: LambdaDeployFunction@1
        displayName: 'Update Get Volunteer Comments'
        inputs:
          awsCredentials: 'AWS Root'
          regionName: 'eu-west-2'
          deploymentMode: 'codeonly'
          functionName: 'back-end-dev-get-volunteerComments'
          codeLocation: 'localfile'
          localZipFile: '$(Build.ArtifactStagingDirectory)/MAD_days.zip/MAD_days.zip'
  dependsOn:
  - Build
  condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))